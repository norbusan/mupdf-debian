From: Kan-Ru Chen <kanru@kanru.info>
Date: Sun, 28 Oct 2018 17:07:56 +0900
Subject: CVE-2018-1000037

X-Git-Url: http://git.ghostscript.com/?p=mupdf.git;a=patch;h=8a3257b01faa899dd9b5e35c6bb3403cd709c371;hp=de39f005f12a1afc6973c1f5cec362d6545f70cb
X-Git-Url: https://git.ghostscript.com/?p=mupdf.git;a=patch;h=b2e7d38e845c7d4922d05e6e41f3a2dc1bc1b14a;hp=f51836b9732c38d945b87fda0770009a77ba680c
---
 source/pdf/pdf-interpret.c |   2 -
 source/pdf/pdf-op-run.c    | 114 ++++++++++++++++++++++++++++-----------------
 source/pdf/pdf-xobject.c   |   3 ++
 3 files changed, 75 insertions(+), 44 deletions(-)

diff --git a/source/pdf/pdf-interpret.c b/source/pdf/pdf-interpret.c
index 3a38661..5bfdada 100644
--- a/source/pdf/pdf-interpret.c
+++ b/source/pdf/pdf-interpret.c
@@ -437,8 +437,6 @@ pdf_process_extgstate(fz_context *ctx, pdf_processor *proc, pdf_csi *csi, pdf_ob
 			fz_var(xobj);
 
 			group = pdf_dict_get(ctx, obj, PDF_NAME_G);
-			if (!group)
-				fz_throw(ctx, FZ_ERROR_GENERIC, "cannot load softmask xobject (%d %d R)", pdf_to_num(ctx, obj), pdf_to_gen(ctx, obj));
 			xobj = pdf_load_xobject(ctx, csi->doc, group);
 
 			fz_try(ctx)
diff --git a/source/pdf/pdf-op-run.c b/source/pdf/pdf-op-run.c
index 95d8c58..354f7a4 100644
--- a/source/pdf/pdf-op-run.c
+++ b/source/pdf/pdf-op-run.c
@@ -497,13 +497,49 @@ pdf_show_pattern(fz_context *ctx, pdf_run_processor *pr, pdf_pattern *pat, pdf_g
 	pdf_grestore(ctx, pr);
 }
 
+
+static void
+pdf_show_image_imp(fz_context *ctx, pdf_run_processor *pr, fz_image *image, fz_matrix *image_ctm, fz_rect *bbox)
+{
+	pdf_gstate *gstate = pr->gstate + pr->gtop;
+
+	if (image->colorspace)
+	{
+		fz_fill_image(ctx, pr->dev, image, image_ctm, gstate->fill.alpha);
+		return;
+	}
+
+	if (gstate->fill.kind == PDF_MAT_COLOR)
+		fz_fill_image_mask(ctx, pr->dev, image, image_ctm,
+				gstate->fill.colorspace, gstate->fill.v, gstate->fill.alpha);
+	else if (gstate->fill.kind == PDF_MAT_PATTERN && gstate->fill.pattern)
+	{
+		fz_clip_image_mask(ctx, pr->dev, image, image_ctm, bbox);
+		fz_try(ctx)
+			pdf_show_pattern(ctx, pr, gstate->fill.pattern, &pr->gstate[gstate->fill.gstate_num], bbox, PDF_FILL);
+		fz_always(ctx)
+			fz_pop_clip(ctx, pr->dev);
+		fz_catch(ctx)
+			fz_rethrow(ctx);
+	}
+	else if (gstate->fill.kind == PDF_MAT_SHADE && gstate->fill.shade)
+	{
+		fz_clip_image_mask(ctx, pr->dev, image, image_ctm, bbox);
+		fz_try(ctx)
+			fz_fill_shade(ctx, pr->dev, gstate->fill.shade, &pr->gstate[gstate->fill.gstate_num].ctm, gstate->fill.alpha);
+		fz_always(ctx)
+			fz_pop_clip(ctx, pr->dev);
+		fz_catch(ctx)
+			fz_rethrow(ctx);
+	}
+}
+
 static void
 pdf_show_image(fz_context *ctx, pdf_run_processor *pr, fz_image *image)
 {
 	pdf_gstate *gstate = pr->gstate + pr->gtop;
 	fz_matrix image_ctm;
 	fz_rect bbox;
-	softmask_save softmask = { NULL };
 
 	if (pr->super.hidden)
 		return;
@@ -515,58 +551,52 @@ pdf_show_image(fz_context *ctx, pdf_run_processor *pr, fz_image *image)
 	bbox = fz_unit_rect;
 	fz_transform_rect(&bbox, &image_ctm);
 
-	if (image->mask)
+	if (image->mask && gstate->blendmode)
 	{
 		/* apply blend group even though we skip the soft mask */
-		if (gstate->blendmode)
-			fz_begin_group(ctx, pr->dev, &bbox, 0, 0, gstate->blendmode, 1);
-		fz_clip_image_mask(ctx, pr->dev, image->mask, &image_ctm, &bbox);
-	}
-	else
-		gstate = pdf_begin_group(ctx, pr, &bbox, &softmask);
+		fz_begin_group(ctx, pr->dev, &bbox, 0, 0, gstate->blendmode, 1);
 
-	if (!image->colorspace)
-	{
+		fz_try(ctx)
+			fz_clip_image_mask(ctx, pr->dev, image->mask, &image_ctm, &bbox);
+		fz_catch(ctx)
+		{
+			fz_end_group(ctx, pr->dev);
+			fz_rethrow(ctx);
+		}
 
-		switch (gstate->fill.kind)
+		fz_try(ctx)
+			pdf_show_image_imp(ctx, pr, image, &image_ctm, &bbox);
+		fz_always(ctx)
 		{
-		case PDF_MAT_NONE:
-			break;
-		case PDF_MAT_COLOR:
-			fz_fill_image_mask(ctx, pr->dev, image, &image_ctm,
-				gstate->fill.colorspace, gstate->fill.v, gstate->fill.alpha);
-			break;
-		case PDF_MAT_PATTERN:
-			if (gstate->fill.pattern)
-			{
-				fz_clip_image_mask(ctx, pr->dev, image, &image_ctm, &bbox);
-				pdf_show_pattern(ctx, pr, gstate->fill.pattern, &pr->gstate[gstate->fill.gstate_num], &bbox, PDF_FILL);
-				fz_pop_clip(ctx, pr->dev);
-			}
-			break;
-		case PDF_MAT_SHADE:
-			if (gstate->fill.shade)
-			{
-				fz_clip_image_mask(ctx, pr->dev, image, &image_ctm, &bbox);
-				fz_fill_shade(ctx, pr->dev, gstate->fill.shade, &pr->gstate[gstate->fill.gstate_num].ctm, gstate->fill.alpha);
-				fz_pop_clip(ctx, pr->dev);
-			}
-			break;
+			fz_pop_clip(ctx, pr->dev);
+			fz_end_group(ctx, pr->dev);
 		}
+		fz_catch(ctx)
+			fz_rethrow(ctx);
 	}
-	else
+	else if (image->mask)
 	{
-		fz_fill_image(ctx, pr->dev, image, &image_ctm, gstate->fill.alpha);
+		fz_clip_image_mask(ctx, pr->dev, image->mask, &image_ctm, &bbox);
+		fz_try(ctx)
+			pdf_show_image_imp(ctx, pr, image, &image_ctm, &bbox);
+		fz_always(ctx)
+			fz_pop_clip(ctx, pr->dev);
+		fz_catch(ctx)
+			fz_rethrow(ctx);
 	}
-
-	if (image->mask)
+	else
 	{
-		fz_pop_clip(ctx, pr->dev);
-		if (gstate->blendmode)
-			fz_end_group(ctx, pr->dev);
+		softmask_save softmask = { NULL };
+
+		gstate = pdf_begin_group(ctx, pr, &bbox, &softmask);
+
+		fz_try(ctx)
+			pdf_show_image_imp(ctx, pr, image, &image_ctm, &bbox);
+		fz_always(ctx)
+			pdf_end_group(ctx, pr, &softmask);
+		fz_catch(ctx)
+			fz_rethrow(ctx);
 	}
-	else
-		pdf_end_group(ctx, pr, &softmask);
 }
 
 static void
diff --git a/source/pdf/pdf-xobject.c b/source/pdf/pdf-xobject.c
index fa765a5..6525809 100644
--- a/source/pdf/pdf-xobject.c
+++ b/source/pdf/pdf-xobject.c
@@ -39,6 +39,9 @@ pdf_load_xobject(fz_context *ctx, pdf_document *doc, pdf_obj *dict)
 	pdf_xobject *form;
 	pdf_obj *obj;
 
+	if (!pdf_is_stream(ctx, dict))
+		fz_throw(ctx, FZ_ERROR_SYNTAX, "XObject must be a stream");
+
 	if ((form = pdf_find_item(ctx, pdf_drop_xobject_imp, dict)) != NULL)
 	{
 		return form;
