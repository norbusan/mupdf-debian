---
 Makerules              |    4 +++-
 source/fitz/load-jpx.c |    4 ++++
 source/pdf/pdf-image.c |    4 ++++
 3 files changed, 11 insertions(+), 1 deletion(-)

--- a/Makerules
+++ b/Makerules
@@ -62,8 +62,10 @@
 
 SYS_FREETYPE_CFLAGS = $(shell pkg-config --cflags freetype2)
 SYS_FREETYPE_LIBS = $(shell pkg-config --libs freetype2)
-SYS_OPENJPEG_CFLAGS = $(shell pkg-config --cflags libopenjpeg1)
+ifeq "$(shell pkg-config --exists libopenjpeg1 && echo yes)" "yes"
+SYS_OPENJPEG_CFLAGS = -DHAVE_OPENJPEG $(shell pkg-config --cflags libopenjpeg1)
 SYS_OPENJPEG_LIBS = $(shell pkg-config --libs libopenjpeg1)
+endif
 SYS_JBIG2DEC_LIBS = -ljbig2dec
 SYS_JPEG_LIBS = -ljpeg
 SYS_ZLIB_LIBS = -lz
--- a/source/fitz/load-jpx.c
+++ b/source/fitz/load-jpx.c
@@ -8,6 +8,8 @@
 #define OPJ_HAVE_STDINT_H
 #endif
 
+#ifdef HAVE_OPENJPEG
+
 #include <openjpeg.h>
 
 static void fz_opj_error_callback(const char *msg, void *client_data)
@@ -251,3 +253,5 @@
 
 	return img;
 }
+
+#endif
--- a/source/pdf/pdf-image.c
+++ b/source/pdf/pdf-image.c
@@ -31,6 +31,7 @@
 		/* special case for JPEG2000 images */
 		if (pdf_is_jpx_image(ctx, dict))
 		{
+#ifdef HAVE_OPENJPEG
 			image = pdf_load_jpx(doc, dict, forcemask);
 
 			if (forcemask)
@@ -43,6 +44,9 @@
 				image->tile = mask_pixmap;
 			}
 			break; /* Out of fz_try */
+#else
+			fz_throw(ctx, FZ_ERROR_GENERIC, "Compiled without libopenjpeg1, JPEG2000 images are not supported");
+#endif
 		}
 
 		w = pdf_to_int(pdf_dict_getsa(dict, "Width", "W"));
