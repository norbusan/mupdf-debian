From: Luciano Bello <luciano@debian.org>
Subject: Fix of mishandling of XML tag name comparisons.
Origin: upstream, http://git.ghostscript.com/?p=mupdf.git;h=2b16dbd8f73269cb15ca61ece75cf8d2d196ed28
Bug-Debian: https://bugs.debian.org/877379
X-CVE: CVE-2017-14687

Index: mupdf-1.9a+ds1/source/html/css-apply.c
===================================================================
--- mupdf-1.9a+ds1.orig/source/html/css-apply.c
+++ mupdf-1.9a+ds1/source/html/css-apply.c
@@ -314,7 +314,7 @@ match_selector(fz_css_selector *sel, fz_
 
 	if (sel->name)
 	{
-		if (strcmp(sel->name, fz_xml_tag(node)))
+		if (!fz_xml_is_tag(node, sel->name))
 			return 0;
 	}
 
Index: mupdf-1.9a+ds1/source/xps/xps-common.c
===================================================================
--- mupdf-1.9a+ds1.orig/source/xps/xps-common.c
+++ mupdf-1.9a+ds1/source/xps/xps-common.c
@@ -43,7 +43,7 @@ xps_parse_brush(fz_context *ctx, xps_doc
 	else if (fz_xml_is_tag(node, "RadialGradientBrush"))
 		xps_parse_radial_gradient_brush(ctx, doc, ctm, area, base_uri, dict, node);
 	else
-		fz_warn(ctx, "unknown brush tag: %s", fz_xml_tag(node));
+		fz_warn(ctx, "unknown brush tag");
 }
 
 void
@@ -81,7 +81,7 @@ xps_begin_opacity(fz_context *ctx, xps_d
 	if (opacity_att)
 		opacity = fz_atof(opacity_att);
 
-	if (opacity_mask_tag && !strcmp(fz_xml_tag(opacity_mask_tag), "SolidColorBrush"))
+	if (fz_xml_is_tag(opacity_mask_tag, "SolidColorBrush"))
 	{
 		char *scb_opacity_att = fz_xml_att(opacity_mask_tag, "Opacity");
 		char *scb_color_att = fz_xml_att(opacity_mask_tag, "Color");
@@ -125,7 +125,7 @@ xps_end_opacity(fz_context *ctx, xps_doc
 
 	if (opacity_mask_tag)
 	{
-		if (strcmp(fz_xml_tag(opacity_mask_tag), "SolidColorBrush"))
+		if (!fz_xml_is_tag(opacity_mask_tag, "SolidColorBrush"))
 			fz_pop_clip(ctx, dev);
 	}
 }
Index: mupdf-1.9a+ds1/source/xps/xps-glyphs.c
===================================================================
--- mupdf-1.9a+ds1.orig/source/xps/xps-glyphs.c
+++ mupdf-1.9a+ds1/source/xps/xps-glyphs.c
@@ -591,7 +591,7 @@ xps_parse_glyphs(fz_context *ctx, xps_do
 
 	/* If it's a solid color brush fill/stroke do a simple fill */
 
-	if (fill_tag && !strcmp(fz_xml_tag(fill_tag), "SolidColorBrush"))
+	if (fz_xml_is_tag(fill_tag, "SolidColorBrush"))
 	{
 		fill_opacity_att = fz_xml_att(fill_tag, "Opacity");
 		fill_att = fz_xml_att(fill_tag, "Color");
Index: mupdf-1.9a+ds1/source/xps/xps-path.c
===================================================================
--- mupdf-1.9a+ds1.orig/source/xps/xps-path.c
+++ mupdf-1.9a+ds1/source/xps/xps-path.c
@@ -874,14 +874,14 @@ xps_parse_path(fz_context *ctx, xps_docu
 	if (!data_att && !data_tag)
 		return;
 
-	if (fill_tag && !strcmp(fz_xml_tag(fill_tag), "SolidColorBrush"))
+	if (fz_xml_is_tag(fill_tag, "SolidColorBrush"))
 	{
 		fill_opacity_att = fz_xml_att(fill_tag, "Opacity");
 		fill_att = fz_xml_att(fill_tag, "Color");
 		fill_tag = NULL;
 	}
 
-	if (stroke_tag && !strcmp(fz_xml_tag(stroke_tag), "SolidColorBrush"))
+	if (fz_xml_is_tag(stroke_tag, "SolidColorBrush"))
 	{
 		stroke_opacity_att = fz_xml_att(stroke_tag, "Opacity");
 		stroke_att = fz_xml_att(stroke_tag, "Color");
Index: mupdf-1.9a+ds1/source/xps/xps-resource.c
===================================================================
--- mupdf-1.9a+ds1.orig/source/xps/xps-resource.c
+++ mupdf-1.9a+ds1/source/xps/xps-resource.c
@@ -81,7 +81,7 @@ xps_parse_remote_resource_dictionary(fz_
 	if (!xml)
 		return NULL;
 
-	if (strcmp(fz_xml_tag(xml), "ResourceDictionary"))
+	if (!fz_xml_is_tag(xml, "ResourceDictionary"))
 	{
 		fz_drop_xml(ctx, xml);
 		fz_throw(ctx, FZ_ERROR_GENERIC, "expected ResourceDictionary element");
