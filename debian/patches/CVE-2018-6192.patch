From: Kan-Ru Chen <kanru@kanru.info>
Date: Sun, 28 Oct 2018 17:39:19 +0900
Subject: CVE-2018-6192

X-Git-Url: http://git.ghostscript.com/?p=mupdf.git;a=patch;h=5e411a99604ff6be5db9e273ee84737204113299
---
 include/mupdf/pdf/object.h | 2 ++
 source/pdf/pdf-parse.c     | 2 ++
 source/pdf/pdf-xref.c      | 4 ++--
 3 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/include/mupdf/pdf/object.h b/include/mupdf/pdf/object.h
index 02d4119..46f08c4 100644
--- a/include/mupdf/pdf/object.h
+++ b/include/mupdf/pdf/object.h
@@ -3,6 +3,8 @@
 
 typedef struct pdf_document_s pdf_document;
 
+#define PDF_MAX_OBJECT_NUMBER 8388607
+
 /*
  * Dynamic objects.
  * The same type of objects as found in PDF and PostScript.
diff --git a/source/pdf/pdf-parse.c b/source/pdf/pdf-parse.c
index 727c7f5..5e0113a 100644
--- a/source/pdf/pdf-parse.c
+++ b/source/pdf/pdf-parse.c
@@ -551,6 +551,8 @@ pdf_parse_ind_obj(fz_context *ctx, pdf_document *doc,
 		fz_throw(ctx, FZ_ERROR_GENERIC, "expected object number");
 	}
 	num = buf->i;
+	if (num < 0 || num > PDF_MAX_OBJECT_NUMBER)
+		fz_throw(ctx, FZ_ERROR_SYNTAX, "object number out of range");
 
 	tok = pdf_lex(ctx, file, buf);
 	if (tok != PDF_TOK_INT)
diff --git a/source/pdf/pdf-xref.c b/source/pdf/pdf-xref.c
index 05fc712..2e8fa25 100644
--- a/source/pdf/pdf-xref.c
+++ b/source/pdf/pdf-xref.c
@@ -214,8 +214,8 @@ pdf_xref_entry *pdf_get_populating_xref_entry(fz_context *ctx, pdf_document *doc
 	}
 
 	/* Prevent accidental heap underflow */
-	if (num < 0)
-		fz_throw(ctx, FZ_ERROR_GENERIC, "object number must not be negative (%d)", num);
+	if (num < 0 || num > PDF_MAX_OBJECT_NUMBER)
+		fz_throw(ctx, FZ_ERROR_GENERIC, "object number out of range (%d)", num);
 
 	/* Return the pointer to the entry in the last section. */
 	xref = &doc->xref_sections[doc->num_xref_sections-1];
